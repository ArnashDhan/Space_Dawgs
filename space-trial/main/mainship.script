local SCREEN_WIDTH = 1024
local SCREEN_HEIGHT = 1024
local ACCELERATION = 200
local BULLET_SPEED=200

function init(self)
	msg.post(".", "acquire_input_focus")
	self.velocity = vmath.vector3()
	self.input = vmath.vector3()
	self.firing=false
end

local function enforce_boundary_constraints(self)
	local p = go.get_position()

	-- Clamp X-coordinate to keep the spaceship within the horizontal bounds
	p.x = math.max(0, math.min(SCREEN_WIDTH, p.x))

	-- Clamp Y-coordinate to keep the spaceship within the vertical bounds
	p.y = math.max(0, math.min(SCREEN_HEIGHT, p.y))

	go.set_position(p)
end

-- This function fires a bullet from the spaceship in the +y direction
local function firebullet(self)
	-- Create a direction vector pointing upwards
	local dir = vmath.vector3(0, 1, 0)
	-- Create a bullet using the factory
	local bullet = factory.create("#factory", go.get_position(), nil, {}, 1)
	-- Set the bullet velocity to the direction vector times the bullet speed
	go.set(bullet, "velocity", dir * BULLET_SPEED)
end


function update(self, dt)
	move_spaceship(self, dt)
	enforce_boundary_constraints(self)
	
end

function on_input(self, action_id, action)
	if action_id == hash("up") then
		self.input.y = 1
	elseif action_id == hash("down") then
		self.input.y = -1
	elseif action_id == hash("left") then
		self.input.x = -1
	elseif action_id == hash("right") then
		self.input.x = 1
	elseif action_id == hash("fire") and action.pressed then
		self.firing = true
		firebullet(self)	
	end
end
